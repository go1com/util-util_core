include:
  - project: 'server/ci-template'
    file:
      - '/includes/codestandard_php.yml'

stages:
  - test
  - release
  - build

variables:
  GIT_AUTHOR_NAME: $GITLAB_USER_NAME
  GIT_AUTHOR_EMAIL: $GITLAB_USER_EMAIL
  GIT_COMMITTER_NAME: $GITLAB_USER_NAME
  GIT_COMMITTER_EMAIL: $GITLAB_USER_EMAIL
  XDEBUG_MODE: coverage

test:phpunit:
  image: go1com/ci-php:php7
  stage: test
  script:
    - composer config gitlab-token.code.go1.com.au $GITLAB_TOKEN
    - composer install
    - phpunit --colors=never --log-junit report.xml --coverage-text --coverage-cobertura=cobertura.xml
  coverage: /^\s*Lines:\s*\d+.\d+\%/
  artifacts:
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: cobertura.xml
  variables:
    ES_JAVA_OPTS: "-Xms1g -Xmx1g"
  except:
    - "tags"
  interruptible: true

release:
  image: node:16
  stage: release
  only:
    refs:
      - master
      - ci
  script:
    - touch CHANGELOG.md
    - npm install semantic-release@^19.0.5 @semantic-release/gitlab @semantic-release/changelog
    - npx semantic-release
  artifacts:
    paths:
      - CHANGELOG.md

publish:
  image: curlimages/curl:latest
  stage: build
  variables:
    URL: "$CI_SERVER_PROTOCOL://$CI_SERVER_HOST:$CI_SERVER_PORT/api/v4/projects/$CI_PROJECT_ID/packages/composer?job_token=$CI_JOB_TOKEN"
  only:
    - tags
    - master
  script:
    - version=$([[ -z "$CI_COMMIT_TAG" ]] && echo "branch=$CI_COMMIT_REF_NAME" || echo "tag=$CI_COMMIT_TAG")
    - insecure=$([ "$CI_SERVER_PROTOCOL" = "http" ] && echo "--insecure" || echo "")
    - response=$(curl -s -w "\n%{http_code}" $insecure --data $version $URL)
    - code=$(echo "$response" | tail -n 1)
    - body=$(echo "$response" | head -n 1)
    # Output state information
    - if [ $code -eq 201 ]; then
      echo "Package created - Code $code - $body";
      else
      echo "Could not create package - Code $code - $body";
      exit 1;
      fi
